{"version":3,"sources":["components/Blog.js","components/Notification.js","services/login.js","components/BlogForm.js","components/Togglable.js","hooks/index.js","App.js","index.js"],"names":["Blog","blog","updateLikes","deleteBlog","currentUser","useState","displayInfo","setInfoDisplay","style","paddingTop","paddingLeft","border","borderWidth","marginBottom","className","onClick","title","author","url","likes","user","name","username","Notification","message","success","credentials","a","async","axios","post","response","data","BlogForm","onSubmit","handleTitleChange","handleAuthorChange","handleUrlChange","type","value","onChange","Togglable","React","forwardRef","props","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","buttonLabel","children","displayName","useField","setValue","formInput","event","target","reset","App","setUser","setTitle","setAuthor","setUrl","notificationMessage","setNotificationMessage","notificationSuccess","setNotificationSuccess","password","baseUrl","resources","setResources","token","setToken","useEffect","get","getAll","service","create","resource","config","headers","Authorization","concat","setTokenState","newToken","update","newBlog","put","id","map","remove","delete","filter","useResource","blogs","blogService","sort","b","loggedUserJSON","window","localStorage","getItem","JSON","parse","handleLogin","preventDefault","loginService","setItem","stringify","setTimeout","addBlog","blogObject","logoutButton","clear","blogRows","key","updatedBlog","confirm","blogFormRef","createRef","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.53e637e4.chunk.js","sourcesContent":["import React, { useState } from 'react'\n\nconst Blog = ({ blog, updateLikes, deleteBlog, currentUser }) => {\n  const [displayInfo, setInfoDisplay] = useState(false)\n\n  const blogStyle = {\n    paddingTop: 10,\n    paddingLeft: 5,\n    border: 'solid',\n    borderWidth: 1,\n    marginBottom: 5\n  }\n\n  return (\n    <div style={blogStyle} className='blog'>\n      <div onClick={() => setInfoDisplay(!displayInfo)} className='blogName'>\n        {blog.title} {blog.author}\n      </div>\n      {displayInfo ?\n        <>\n          <div>{blog.url}</div>\n          <div>\n            {blog.likes} likes\n            <button onClick={updateLikes}>like</button>\n          </div>\n          <div>added by {blog.user.name}</div>\n          {currentUser.username === blog.user.username ? \n            <button onClick={deleteBlog}>remove</button>\n            :\n            null\n          }\n        </>\n        :\n        null\n      }\n    </div>\n  )\n}\n\nexport default Blog","import React from 'react'\n\nconst Notification = ({ message, success }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <>\n    {success ? \n      <div className='successfulOperation'>\n        {message}\n      </div>\n      :\n      <div className='unsuccessfulOperation'>\n        {message}\n      </div>\n    }\n    </>\n  )\n}\n\nexport default Notification","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst BlogForm = ({ \n  onSubmit,\n  handleTitleChange,\n  handleAuthorChange,\n  handleUrlChange,\n  title,\n  author,\n  url\n}) => {\n  return(\n    <div>\n      <h2>create new</h2>\n      <form onSubmit={onSubmit}>\n        <div>\n          title:\n          <input\n            type=\"text\"\n            value={title}\n            name=\"Title\"\n            onChange={handleTitleChange}\n          />\n        </div>\n        <div>\n          author:\n          <input\n            type=\"text\"\n            value={author}\n            name=\"Author\"\n            onChange={handleAuthorChange}\n          />\n        </div>\n        <div>\n          url:\n          <input\n            type=\"text\"\n            value={url}\n            name=\"URL\"\n            onChange={handleUrlChange}\n          />\n        </div>\n        <button type=\"submit\">create</button>\n      </form>\n    </div>\n  )\n}\n\nBlogForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  handleTitleChange: PropTypes.func.isRequired,\n  handleAuthorChange: PropTypes.func.isRequired,\n  handleUrlChange: PropTypes.func.isRequired,\n  title: PropTypes.string.isRequired,\n  author: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired\n}\n\nexport default BlogForm","import React, { useState, useImperativeHandle } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility\n    }\n  })\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n      </div>\n      <div style={showWhenVisible}>\n        {props.children}\n        <button onClick={toggleVisibility}>cancel</button>\n      </div>\n    </div>\n  )\n})\n\nTogglable.displayName = 'Togglable'\n\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired\n}\n\nexport default Togglable","import { useState, useEffect } from 'react'\nimport axios from 'axios'\n\n\nexport const useField = (type) => {\n  const [value, setValue] = useState('')\n\n  const onChange = (event) => {\n    setValue(event.target.value)\n  }\n\n  const reset = () => {\n    setValue('')\n  }\n\n  return {\n    formInput: {\n      type,\n      value,\n      onChange,\n    },\n    reset\n  }\n}\n\nexport const useResource = (baseUrl) => {\n  const [resources, setResources] = useState([])\n  const [token, setToken] = useState('')\n\n  const setTokenState = newToken => {\n    setToken(`bearer ${newToken}`)\n  }\n\n  useEffect(() => {\n    const getAll = async () => {\n      const response = await axios.get(baseUrl)\n      setResources(response.data)\n    }\n    getAll()\n  }, [baseUrl])\n\n  const create = async (resource) => {\n    const config = {\n      headers: { Authorization: token },\n    }\n\n    const response = await axios.post(baseUrl, resource, config)\n    setResources(resources.concat(response.data))\n    return response.data\n  }\n\n  const update = async newBlog => {\n    const response = await axios.put(`${baseUrl}/${newBlog.id}`, newBlog)\n    setResources(resources.map(blog =>\n      blog.id !== newBlog.id ? blog : newBlog\n    ))\n\n    return response.data\n  }\n\n  const remove = async id => {\n    const config = {\n      headers: { Authorization: token },\n    }\n\n    const response = await axios.delete(`${baseUrl}/${id}`, config)\n\n    setResources(resources.filter(blog =>\n      blog.id !== id\n    ))\n    return response.data\n  }\n\n  const service = {\n    create,\n    setTokenState,\n    update,\n    remove\n  }\n\n  return [\n    resources, service\n  ]\n}","import React, { useState, useEffect } from 'react'\nimport Blog from './components/Blog'\nimport Notification from './components/Notification'\n//import blogService from './services/blogs'\nimport loginService from './services/login'\nimport BlogForm from './components/BlogForm'\nimport Togglable from './components/Togglable'\nimport  { useField, useResource } from './hooks'\n\nconst App = () => {\n  const [user, setUser] = useState(null)\n  const [title, setTitle] = useState('')\n  const [author, setAuthor] = useState('')\n  const [url, setUrl] = useState('')\n  const [notificationMessage, setNotificationMessage] = useState(null)\n  const [notificationSuccess, setNotificationSuccess] = useState(null)\n  const username = useField('text')\n  const password = useField('text')\n  const [ blogs, blogService ] = useResource('/api/blogs')\n\n  // sort by likes\n  blogs.sort((a, b) => a.likes - b.likes)\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogListUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setTokenState(user.token)\n    }\n  }, [])\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username: username.formInput.value, password: password.formInput.value\n      })\n\n      window.localStorage.setItem(\n        'loggedBlogListUser', JSON.stringify(user)\n      )\n      blogService.setTokenState(user.token)\n      setUser(user)\n      username.reset()\n      password.reset()\n    } catch (exception) {\n      setNotificationMessage('wrong username or password')\n      setNotificationSuccess(false)\n      setTimeout(() => {\n        setNotificationMessage(null)\n        setNotificationSuccess(null)\n      }, 5000)\n    }\n  }\n\n  const addBlog = (event) => {\n    event.preventDefault()\n    const blogObject = {\n      title: title,\n      author: author,\n      url: url\n    }\n\n    blogService.create(blogObject)\n    setNotificationMessage(`a new blog ${title} by ${author} added`)\n    setNotificationSuccess(true)\n    setTimeout(() => {\n      setNotificationMessage(null)\n      setNotificationSuccess(null)\n    }, 5000)\n    setTitle('')\n    setAuthor('')\n    setUrl('')\n  }\n\n  const updateLikes = blog => {\n    const updatedBlog = { ...blog, likes: blog.likes + 1 }\n    blogService.update(updatedBlog)\n  }\n\n\n  const deleteBlog = (title, author, id) => {\n    if (window.confirm(`remove blog ${title} by ${author}?`)){\n      blogService.remove(id)\n    }\n  }\n\n  const loginForm = () => (\n    <>\n      <h2>Log in to application</h2>\n      <Notification message={notificationMessage} success={notificationSuccess}/>\n      <form onSubmit={handleLogin}>\n        <div>\n          username\n          <input { ...username.formInput } />\n        </div>\n        <div>\n          password\n          <input { ...password.formInput } />\n        </div>\n        <button type=\"submit\">login</button>\n      </form>\n    </>\n  )\n\n  const logoutButton = () => {\n    window.localStorage.clear()\n    setUser(null)\n  }\n\n  const blogRows = () => blogs.map(blog =>\n    <Blog\n      key={blog.id}\n      blog={blog}\n      updateLikes={() => updateLikes(blog)}\n      deleteBlog={() => deleteBlog(blog.title, blog.author, blog.id)}\n      currentUser={user}\n    />\n  )\n\n  const blogFormRef = React.createRef()\n\n  const blogDisplay = () => (\n    <>\n      <h2>blogs</h2>\n      <Notification message={notificationMessage} success={notificationSuccess}/>\n      {user.name} logged in\n      <button onClick={logoutButton}>logout</button>\n      <Togglable buttonLabel=\"new note\" ref={blogFormRef}>\n        <BlogForm\n          onSubmit={addBlog}\n          handleTitleChange={({ target }) => setTitle(target.value)}\n          handleAuthorChange={({ target }) => setAuthor(target.value)}\n          handleUrlChange={({ target }) => setUrl(target.value)}\n          title={title}\n          author={author}\n          url={url}\n        />\n      </Togglable>\n      {blogRows()}\n    </>\n  )\n\n  return (\n    <div className=\"App\">\n      {user === null ?\n        loginForm() :\n        blogDisplay()\n      }\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}